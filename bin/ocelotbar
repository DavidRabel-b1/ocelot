#!/bin/bash

TMD_URL="~/public_html/tm/tm_720.csv"
if [[ -f ~/.ocelotbarrc ]] ; then
    . ~/.ocelotbarrc
    if [[ -n "$tmd_url" ]] ; then
        TMD_URL="$tmd_url"
    fi
fi

# set $obar to your liking
obar="not set"

bat_now=$(cat /sys/class/power_supply/BAT0/energy_now)
bat_status=$( cat /sys/class/power_supply/BAT0/status )
bat_full=$(cat /sys/class/power_supply/BAT0/energy_full)
load=$(( bat_now*10/bat_full ))
get_bat() {
    if [[ "$load" -eq 0 ]] ; then
        echo -n "^fg(#ff0000)"
    fi
    echo "$(( bat_now/10000 ))^fg()"
}

get_bat_graph(){
    if [[ "$load" -eq 0 ]] ; then
        echo -n "^fg(#ff0000)·"
        if [[ "$bat_status" == "Charging" ]] ; then
            echo -n "^fg(#ffffff)·^fg()"
        fi
    else
        for (( i=1 ; i<=load ; i++ )) ; do
            if [[ "$bat_status" == "Unknown" ]] ; then
                echo -n "^fg()"
            else
                if [[ "$i" -ge 7 ]] ; then
                    echo -n "^fg(#73d216)"
                elif [[ "$i" -ge 5 ]] ; then
                    echo -n "^fg(#edd400)"
                elif [[ "$i" -ge 3 ]] ; then
                    echo -n "^fg(#f57900)"
                else
                    echo -n "^fg(#cc0000)"
                fi
            fi
            if [[ "$i" -eq "$load" ]] ; then
                if [[ "$bat_status" == "Charging" ]] ; then
                    echo -n "^fg(#ffffff)·^fg()"
                else
                    echo -n "·"
                fi
            else
                echo -n "·"
            fi
        done
    fi
    echo -n "^fg()"

    # debug
    # echo "$load"
}

format_temp() {
    local temperature=$1
    if [[ -z "$temperature" ]] ; then
        temperature=1
    fi

    local d=$(( $temperature/1000 ))
    local e=$(( $temperature-d*1000 ))
    local e1=0
    local negative=""
    if [[ "$e" -lt 0 ]] ; then
        e1=$( echo "$e" | cut -b 2-4 )
        if [[ "$temperature" -eq 0 ]] ; then
            negative="-"
        fi
    else
        e1=$( echo "$e" | cut -b 1-4 )
    fi
    if [[ "$e1" -gt 100 ]] ; then
        e1=$( echo "$e1" | cut -b 1 )
    else
        e1=0
    fi
    echo -en "${negative}$d,$e1"
}

fetch_tm() {
    this_time=$( date +%s )

    if [[ -f /tmp/ocelotbar.fetchedtm ]] ; then
        fetched_tm=$( cat /tmp/ocelotbar.fetchedtm )
        scheduled_time=$( echo "$fetched_tm" | cut -f 2 -d":" )
        if [[ "$this_time" -gt "$scheduled_time" ]] ; then
            current_temp=$( curl -s "$TMD_URL" -m 1 )
            outside_t=$( echo "$current_temp" | cut -f 3 -d"," )
            formatted_outside_t=$( format_temp "$outside_t" )
            next_time=$(( this_time+600 ))
            echo "$formatted_outside_t:$next_time" > /tmp/ocelotbar.fetchedtm
        else
            formatted_outside_t=$( echo "$fetched_tm" | cut -f 1 -d":" )

            # debug
            # echo "formatted_outside_t=$formatted_outside_t"
            # sleep 5
        fi
    else
        echo "0,0:0" > /tmp/ocelotbar.fetchedtm
    fi

    # debug
    # echo "scheduled_time=$scheduled_time"
    # sleep 5

    # next_time=$(( this_time+600 ))
    # echo "$formatted_outside_t:$next_time" > /tmp/ocelotbar.fetchedtm
}

fetch_tm
get_tm_outside() {
    echo "$formatted_outside_t"
}

get_tm_outside_graph() {
    local min=-20
    local max=45
    local t=$( echo "$formatted_outside_t" | cut -f 1 -d"," )

    if [[ "$t" -ge 0 ]] ; then
        min=0
        max=$t
    else
        min=$t
        max=0
    fi
    for (( i=$min ; i<=$max ; i=i+1 )) ; do
        if [[ "$i" -ge 1 ]] && [[ "$i" -le 4 ]]; then
            echo -n "^fg(#3465a4)·" # blue
        elif [[ "$i" -ge 5 ]] && [[ "$i" -le 14 ]] ; then
            echo -n "^fg(#73d216)·" # green
        elif [[ "$i" -ge 15 ]] && [[ "$i" -le 24 ]] ; then
            echo -n "^fg(#edd400)·" # yellow
        elif [[ "$i" -ge 25 ]] && [[ "$i" -le 34 ]] ; then
            echo -n "^fg(#f57900)·" # orange
        elif [[ "$i" -ge 35 ]] ; then
            echo -n "^fg(#cc0000)·" # red
        elif [[ "$i" -le -16 ]] ; then
            echo -n "^fg(#d3d7cf)·" # dark white
        elif [[ "$i" -ge -15 ]] && [[ "$i" -le -6 ]] ; then
            echo -n "^fg(#75507b)·" # purple
        elif [[ "$i" -ge -5 ]] && [[ "$i" -le -1 ]] ; then
            echo -n "^fg(#3465a4)·" # blue
        else
            echo -n "^fg()·"
        fi
    done
    echo "^fg()"
}

obar="^p(_CENTER)"
obar="${obar}^fg(#ffffff)$( get_tm_outside )^fg() °C $( get_tm_outside_graph )   "
obar="${obar}^fg(#ffffff)$( get_bat )^fg() mAh $( get_bat_graph )   "

