#!/usr/bin/env bash

# initial configuration
SCREEN_WIDTH=1366
OCELOT_PATH=""
if [[ -f ~/.ocelotrc ]] ; then
    . ~/.ocelotrc
    if [[ -n "$screen_width" ]] ; then
        SCREEN_WIDTH=$screen_width
        echo " · SCREEN_WIDTH=$SCREEN_WIDTH"
    fi
    if [[ -n "$ocelot_path" ]] ; then
        OCELOT_PATH="$ocelot_path"
        echo " · OCELOT_PATH=$OCELOT_PATH"
    fi
else
    echo " · ~/.ocelotrc does not exist"
fi

# debug
# echo "${OCELOT_PATH}ocelot"

# create a fifo to send output
ff="/tmp/ocelot.fifo"
[[ -p $ff ]] || mkfifo -m 600 "$ff"

while read -r; do
    # save last REPLY for regular refresh of dzen2
    echo $REPLY > /tmp/ocelot.lastreply

    # filter output to only what we want to match and parse
    [[ $REPLY =~ ^(([[:digit:]]+:)+[[:digit:]]+ ?)+$ ]] && read -ra desktops <<< "$REPLY" || continue
    for desktop in "${desktops[@]}"; do
        # set values for
        # d - the desktop id
        # w - number of windows in that desktop
        # m - tiling layout/mode for that desktop
        # c - whether that desktop is the current (1) or not (0)
        # u - whether a window in that desktop has an urgent hint set (1) or not (0)
        IFS=':' read -r d w m c u <<< "$desktop"
        s=""

        # for the current desktop
        ((c)) && f="#ffffff" current_d=$((d+1)) && case $m in
            # name each layout/mode with a symbol
            0) i="T" ;;
            1) i="M" ;;
            2) i="B" ;;
            3) i="G" ;;
            4) i="F" ;;
        esac  || f=""

        # if the desktop has an urgent hint its color should be #ff0000
        ((u)) && f="#ff0000"

        # for every window
        # ((w)) +& r+="^fg($f)·^fg()"
        if [[ "$w" -gt 0 ]] ; then
            for (( ii=0 ; ii<w ; ii=ii+1 )) ; do
                r+="^fg($f)·^fg()"
            done
            r+=" "
        fi

        # if the desktop has windows print that number next to the desktop name
        # else just print the desktop name
        # ((w)) && r+="$s^fg($f)$d$w^fg()" || r+="$s^fg()"
    done

	d_date=$(date "+%a, %d. %b")
    d_time=$(date "+%H:%M")
    date="$d_date, ^fg(#ffffff)$d_time^fg()"
    obar="   $obar not set"
	source "${OCELOT_PATH}bin/ocelotbar"

    # read from fifo and output to dzen2
    printf " %s   %s%s%s   %s\n" "$date" "$r" "$current_d" "$i" "$obar" && unset r
done < "$ff" | dzen2 -h 21 -w "$SCREEN_WIDTH" -ta l -e -p -fn "xft:Monospace:pixelsize=13" &

# output last REPLY from ocelot to refresh dzen2 regularly without interaction
while true ; do
    sleep 60
    cat /tmp/ocelot.lastreply
done > "$ff" &

# pass output to fifo
${OCELOT_PATH}ocelot > "$ff"

