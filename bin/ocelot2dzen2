#!/usr/bin/env bash

# initial configuration
SCREEN_WIDTH=1366
OCELOT_PATH="/home/poinck/gits/ocelot"

# create a fifo to send output
ff="/tmp/ocelot.fifo"
[[ -p $ff ]] || mkfifo -m 600 "$ff"

while read -r; do
    # save last REPLY for regular refresh of dzen2
    echo $REPLY > /tmp/ocelot.lastreply

    # filter output to only what we want to match and parse
    [[ $REPLY =~ ^(([[:digit:]]+:)+[[:digit:]]+ ?)+$ ]] && read -ra desktops <<< "$REPLY" || continue
    for desktop in "${desktops[@]}"; do
        # set values for
        # d - the desktop id
        # w - number of windows in that desktop
        # m - tiling layout/mode for that desktop
        # c - whether that desktop is the current (1) or not (0)
        # u - whether a window in that desktop has an urgent hint set (1) or not (0)
        IFS=':' read -r d w m c u <<< "$desktop"
        s="   "
        # name each desktop
        case $d in
            0) d="a" s="" ;;
            1) d="b" ;;
            2) d="c" ;;
            3) d="d" ;;
            4) d="e" ;;
            5) d="f" ;;
            6) d="g" ;;
            7) d="h" ;;
            8) d="i" ;;
            9) d="j" ;;
        esac
        # the current desktop color should be #d11783
        # we will also display the current desktop's tiling layout/mode
        ((c)) && f="#ffffff" && case $m in
            # name each layout/mode with a symbol
            0) i="T" ;;
            1) i="M" ;;
            2) i="B" ;;
            3) i="G" ;;
            4) i="F" ;;
        esac  || f="#5e7175"

        # if the desktop has an urgent hint its color should be #ff0000
        ((u)) && f="#ff0000"

        # if the desktop has windows print that number next to the desktop name
        # else just print the desktop name
        # ((w)) && r+="$s^fg($f)$d$w^fg()" || r+="$s^fg($f)$d^fg()"
        ((w)) && r+="$s^fg($f)$d$w^fg()" || r+="$s^fg()"
        #((w)) && r="$s ^fg($f)$d $w^fg()"
    done

	date=$(date "+%H:%M   %a, %d. %b %Y")
	. $OCELOT_PATH/bin/ocelotbar

    # read from fifo and output to dzen2
    printf " %s   %s   %s   %s\n" "$date" "$r" "$i" "$obar" && unset r
done < "$ff" | dzen2 -h 21 -w $SCREEN_WIDTH -ta l -e -p -fn "xft:Monospace:pixelsize=13" &

# output last REPLY from ocelot to refresh dzen2 regularly without interaction
while true ; do
    sleep 60
    cat /tmp/ocelot.lastreply
done > "$ff" &

# pass output to fifo
$OCELOT_PATH/ocelot > "$ff"
