#!/bin/bash
#
# otime provides day of the week, week number, time, day of month and month
# for the ocelot side-panel
#
#    ^   ^
#  +-------+
#  |  o_O  |
#  |  >.<  |__/
#  +-------+
#
# ocelot by AndrÃ© Klausnitzer, CC0

SCALE=1
if [[ -f ~/.ocelotrc ]] ; then
    . ~/.ocelotrc
    if [[ -n "$scale" ]] ; then
        SCALE="$scale"
    fi
fi

# initialize scaling
_FP=$(( 9*SCALE ))      # font pixels
_BP=$(( 4*SCALE ))      # border pixels
_PW=$(( _PW*SCALE ))
_PLH=$(( _PLH*SCALE ))
_BI=$(( _PW-(_BP*2) ))  # box inner
_BTB=$(( 8*SCALE ))     # box border top, bottom and left
_BTM=$(( _BTB+_BP ))    # box inner top margin
_TA=$(( 1*SCALE))       # text adjustment

otime_content=""
get_otime() {
    year_left_margin=$(( SCALE*24 ))
    time_left_margin=$(( SCALE*20 ))
    hour=$(date '+%-H')

    # test
    #hour="1"

    if [[ "$hour" -lt 10 ]] ; then
        time_left_margin=$(( SCALE*24 ))
    fi
    otime1_content="otime1:=\n^pa(${time_left_margin};0)^fg(#ffffff)${hour}:$(date '+%M')"
    otime_content="otime:=^fg(#ffffff)$(date '+%a,') ^fg(#729fcf)$(date '+W%-W')==^fg(#ffffff)$(date '+%_d.') ^fg(#729fcf)$(date '+%b');;#173252--#173252" # #3465a4 #173252
    otime2_content="otime2:=^pa(${year_left_margin};0)^fg(#3465a4)$(date '+%Y')"
}

ofifo="/tmp/ocollector.fifo$OCELOT_INSTANCE"
while true ; do
    get_otime

    # debug
    # echo "$otime_content"

    echo "$otime1_content" > "$ofifo"
    echo "$otime_content" > "$ofifo"
    echo "$otime2_content" > "$ofifo"
    sleep 15
done
