#!/bin/bash
#
# set volume up or down
#
#    ^   ^
#  +-------+
#  |  o_O  |
#  |  >.<  |__/
#  +-------+
#
# ocelot by AndrÃ© Klausnitzer, CC0

SCALE=1
VOLUME_MASTER="Master"
if [[ -f ~/.ocelotrc ]] ; then
    . ~/.ocelotrc
    if [[ -n "$scale" ]] ; then
        SCALE="$scale"
    fi
    if [[ -n "$volume_master" ]] ; then
        VOLUME_MASTER="$volume_master"
    fi
fi

# initialize scaling
#_FP=$(( 9*SCALE ))      # font pixels
#_BP=$(( 4*SCALE ))      # border pixels
#_PW=$(( _PW*SCALE ))
#_PLH=$(( _PLH*SCALE ))
#_BI=$(( _PW-(_BP*2) ))  # box inner
#_BTB=$(( 8*SCALE ))     # box border top, bottom and left
#_BTM=$(( _BTB+_BP ))    # box inner top margin
#_TA=$(( 1*SCALE))       # text adjustment

ofifo="/tmp/ocollector.fifo$OCELOT_INSTANCE"

if [[ "$1" == "up" ]] ; then
    omixer=$( amixer set $VOLUME_MASTER 5%+ )
elif [[ "$1" == "down" ]] ; then
    omixer=$( amixer set $VOLUME_MASTER 5%- )
elif [[ "$1" == "mute" ]] ; then
    omixer=$( amixer set $VOLUME_MASTER toggle )
fi

_tmp_master_volume=$( echo "$omixer" | grep "Front Left: Playback" )
_tmp2_mavo=${_tmp_master_volume#*[}
omixer_master_volume=${_tmp2_mavo%%%]*}
muted=0
is_off=$( echo "$_tmp_master_volume" | grep "off" )
if [[ "$?" -eq 0 ]] ; then
    muted=1
fi
echo "[DEBUG] omixer_master_volume = $omixer_master_volume, muted = $muted"
# 75-16-4=55
if [[ "$muted" -eq 1 ]] ; then
    ovolume_pixel=0
else
    ovolume_pixel=$(( omixer_master_volume*55*SCALE/100 ))
fi

volume="ovolume:=$ovolume_pixel"
echo "[DEBUG] $volume"
echo "$volume" > "$ofifo"

